{
	"info": {
		"_postman_id": "a586ab85-baae-4c69-afa3-84ccb4e83238",
		"name": "UNQfy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "errors",
			"item": [
				{
					"name": "route not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"route not found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/invalidRoute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"invalidRoute"
							]
						}
					},
					"response": []
				},
				{
					"name": "send invalid json",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"invalid json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns n' Roses\",\n  country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "artists/9999 (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add album (artist doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album to inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RELATED_RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 1987,\n  \"artistId\": 9999\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "add artist (missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add artist, missing required field\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "albums/9999 (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get inexistent album\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add album (missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album, missing required field\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 1987\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete artist (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete album (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete inexistent album\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"9999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "artists",
			"item": [
				{
					"name": "filter artists",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be empty list\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=guns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "guns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be empty list\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "add artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add artist\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Guns and Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"United States\",",
									"    });",
									"    pm.environment.set(\"testArtistId\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns and Roses\",\n  \"country\": \"United States\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "add duplicated artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add artist with the same name\", function () {",
									"    pm.response.to.have.status(409);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 409,",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns and Roses\",\n  \"country\": \"United States\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns and Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"United States\",",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"USA\",",
									"    });",
									"    pm.environment.set(\"testArtistId\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns n' Roses\",\n  \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add another artist ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add another artist\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Muse\",",
									"        \"albums\": [],",
									"        \"country\": \"UK\",",
									"    });",
									"    pm.environment.set(\"testArtistId2\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Muse\",\n  \"country\": \"UK\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter artists guns",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get list of one artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=guns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "guns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter artists se",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get two artists\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId2\"),",
									"            \"name\": \"Muse\",",
									"            \"albums\": [],",
									"            \"country\": \"UK\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=se",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "se"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get two artists\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId2\"),",
									"            \"name\": \"Muse\",",
									"            \"albums\": [],",
									"            \"country\": \"UK\",",
									"        }",
									"    ]);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete artist Muse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should delete artist\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get one artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "albums",
			"item": [
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"empty albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"empty albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums?name=destruction",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							],
							"query": [
								{
									"key": "name",
									"value": "destruction"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var albumId = jsonData.id;",
									"    ",
									"    var expectedAlbum = {",
									"        \"id\": albumId,",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 2000,",
									"        \"tracks\":[]",
									"    };",
									"    ",
									"    pm.expect(jsonData).to.be.deep.equal(expectedAlbum);",
									"    pm.environment.set(\"testAlbumId\", albumId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 2000,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "add duplicated album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album with the same name\", function () {",
									"    pm.response.to.have.status(409);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 409,",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 2000,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "get album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testAlbumId\"),",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"tracks\": [],",
									"        \"year\": 2000,",
									"    });",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update album (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"update album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testAlbumId\"),",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"tracks\": [],",
									"        \"year\": 1987,",
									"    });",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"year\": 1987\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have 1 album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"             {",
									"                \"id\": pm.environment.get(\"testAlbumId\"),",
									"                \"name\": \"Appetite For Destruction\",",
									"                \"year\": 1987,",
									"                \"tracks\":[]",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add another album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var albumId = jsonData.id;",
									"    ",
									"    var expectedAlbum = {",
									"        \"id\": albumId,",
									"        \"name\": \"Use Your Illusion 1\",",
									"        \"year\": 1992,",
									"        \"tracks\":[]",
									"    };",
									"    ",
									"    pm.expect(jsonData).to.be.deep.equal(expectedAlbum);",
									"    pm.environment.set(\"testAlbumId2\", albumId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Use Your Illusion 1\",\n  \"year\": 1992,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter albums illusion",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"        \"id\": pm.environment.get(\"testAlbumId2\"),",
									"        \"name\": \"Use Your Illusion 1\",",
									"        \"year\": 1992,",
									"        \"tracks\": [],",
									"    }]);",
									"    ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums?name=illusion",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							],
							"query": [
								{
									"key": "name",
									"value": "illusion"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be two album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"       {",
									"            \"id\": pm.environment.get(\"testAlbumId\"),",
									"            \"name\": \"Appetite For Destruction\",",
									"            \"year\": 1987,",
									"            \"tracks\":[]",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testAlbumId2\"),",
									"            \"name\": \"Use Your Illusion 1\",",
									"            \"year\": 1992,",
									"            \"tracks\": [],",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have 2 albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"             {",
									"                \"id\": pm.environment.get(\"testAlbumId\"),",
									"                \"name\": \"Appetite For Destruction\",",
									"                \"year\": 1987,",
									"                \"tracks\":[]",
									"            },",
									"            {",
									"                \"id\": pm.environment.get(\"testAlbumId2\"),",
									"                \"name\": \"Use Your Illusion 1\",",
									"                \"year\": 1992,",
									"                \"tracks\": [],",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete album",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete album\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"            {",
									"                \"id\": pm.environment.get(\"testAlbumId2\"),",
									"                \"name\": \"Use Your Illusion 1\",",
									"                \"year\": 1992,",
									"                \"tracks\": [],",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testAlbumId2\"),",
									"            \"name\": \"Use Your Illusion 1\",",
									"            \"year\": 1992,",
									"            \"tracks\": [],",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "lyrics",
			"item": [
				{
					"name": "lyrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/145/lyrics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"145",
								"lyrics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should be empty list\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal([]);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var userId = jsonData._id;\r",
									"    \r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"_id\": userId,\r",
									"        \"_name\": \"Pepin\",\r",
									"        \"_playedTracks\": [],\r",
									"        \"_timesPlayed\": [],\r",
									"    });\r",
									"\r",
									"\r",
									"    pm.environment.set(\"testUserId\", userId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pepin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add duplicated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"add user with the same name\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 409,\r",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        \r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pepin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var userId2 = jsonData._id;\r",
									"    \r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"_id\": userId2,\r",
									"        \"_name\": \"martin\",\r",
									"        \"_playedTracks\": [],\r",
									"        \"_timesPlayed\": [],\r",
									"    });\r",
									"\r",
									"\r",
									"    pm.environment.set(\"testUserId2\", userId2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"martin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter users ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should get user pepe\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal([\r",
									"        {\r",
									"        \"_id\": pm.environment.get(\"testUserId\"),\r",
									"        \"_name\": \"Pepin\",\r",
									"        \"_playedTracks\": [],\r",
									"        \"_timesPlayed\": []\r",
									"    },\r",
									"    {\r",
									"        \"_id\":  pm.environment.get(\"testUserId2\"),\r",
									"        \"_name\": \"martin\",\r",
									"        \"_playedTracks\": [],\r",
									"        \"_timesPlayed\": []\r",
									"    }\r",
									"    ]);\r",
									"   \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/users?name=in",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "name",
									"value": "in"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listen track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should get user with listened track\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"_id\": pm.environment.get(\"testUserId\"),\r",
									"            \"_name\": \"Pepin\",\r",
									"    \"_playedTracks\": [\r",
									"        {\r",
									"            \"id\": 4,\r",
									"            \"name\": \"Sunburn\",\r",
									"            \"duration\": 204,\r",
									"            \"genres\": [\r",
									"                \"Rock\"\r",
									"            ],\r",
									"            \"lyrics\": null\r",
									"        }\r",
									"    ],\r",
									"    \"_timesPlayed\": [\r",
									"        {\r",
									"            \"trackId\": 4,\r",
									"            \"timesPlayed\": 1\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"6\",\r\n    \"trackId\":\"4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/users/listenings/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"listenings",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should get user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"_id\": pm.environment.get(\"testUserId\"),\r",
									"            \"_name\": \"Pepin\",\r",
									"    \"_playedTracks\": [\r",
									"        {\r",
									"            \"id\": 4,\r",
									"            \"name\": \"Sunburn\",\r",
									"            \"duration\": 204,\r",
									"            \"genres\": [\r",
									"                \"Rock\"\r",
									"            ],\r",
									"            \"lyrics\": null\r",
									"        }\r",
									"    ],\r",
									"    \"_timesPlayed\": [\r",
									"        {\r",
									"            \"trackId\": 4,\r",
									"            \"timesPlayed\": 1\r",
									"        }\r",
									"    ]\r",
									"});\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/users/{{testUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should get updated user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"_id\": pm.environment.get(\"testUserId\"),\r",
									"        \"_name\": \"Pepe\",\r",
									"        \"_playedTracks\": [\r",
									"        {\r",
									"            \"id\": 4,\r",
									"            \"name\": \"Sunburn\",\r",
									"            \"duration\": 204,\r",
									"            \"genres\": [\r",
									"                \"Rock\"\r",
									"            ],\r",
									"            \"lyrics\": null\r",
									"        }\r",
									"    ],\r",
									"    \"_timesPlayed\": [\r",
									"        {\r",
									"            \"trackId\": 4,\r",
									"            \"timesPlayed\": 1\r",
									"        }\r",
									"    ],\r",
									"    });\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pepe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/users/{{testUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user Pepin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should delete user\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/users/{{testUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user Pepin - user does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should return user not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"        \r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/users/{{testUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"{{testUserId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}